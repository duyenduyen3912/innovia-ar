import { DollarCircleOutlined } from '@ant-design/icons'
import { Button, Row, Table } from 'antd'
import { ColumnsType } from 'antd/es/table'
import Head from 'next/head'
import React from 'react'
import PageTitle from '../../components/PageTitle'
import TotalMoney from '../../module/admin/components/total-money/TotalMoney'
import classNames from 'classnames/bind'
import style from "./Admin.module.scss"
import { useQuery } from 'react-query'
import { getStatistical } from '../../api/ApiAdmin'
interface DataType {
  key: string,
  order: string,
  date: string,
  status: string,
  total: number

}

const columns: ColumnsType<DataType> = [
  {
      title: 'Order',
      dataIndex: 'order',
      key: 'order',
      render: (order) => <span>{order}</span>

  },
  {
      title: 'Date',
      dataIndex: 'date',
      key: 'date',
      render: (date) => <span>{date}</span>
  },
  {
      title: 'Status',
      dataIndex: 'status',
      key: 'status',
      render: (value) => <span>{value}</span>
  },
  {
      title: 'Total',
      dataIndex: 'total',
      key: 'total',
      render: (value) => <span>
          <DollarCircleOutlined />
          {value}
          </span>
  },
  {
      title: 'Actions',
      dataIndex: 'action',
      key: 'action',
      render: (_, record) => {
          return (
              <Button>view</Button>
          )
      }
  },
]

const dataSource: DataType[] = [
  {
      key: '1',
      order: '#26112',
      date: '26-07-2022',
      status: 'hold on',
      total: 1000000

  },
  {
      key: '2',
      order: '#26112',
      date: '26-07-2022',
      status: 'hold on',
      total: 1000000

  },{
      key: '3',
      order: '#26112',
      date: '26-07-2022',
      status: 'hold on',
      total: 1000000

  }
]


const cx = classNames.bind(style)
function DashboardAdmin() {
    const {data:StatisticalWeek} = useQuery(['StatisticalWeek'], () => getStatistical('week'));
    const {data:StatisticalMonth} = useQuery(['StatisticalWeek'], () => getStatistical('month'));
    const {data:StatisticalYear} = useQuery(['StatisticalWeek'], () => getStatistical('year'));
  
  return (
    <div>
        <>
        <Head >
            <title>Fooce | Dashboard</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/icon.png" />
        </Head>
        <PageTitle name = "Dashboard" />
            <div className={cx('admin')}>
                <Row gutter={16} style={{marginBottom: '40px'}} justify='space-around'>
                    <TotalMoney name="Tổng tiền trong tuần" totalMoney={StatisticalWeek?.data[0].Total}/>
                    <TotalMoney name="Tổng tiền trong tháng" totalMoney={StatisticalMonth?.data[0].Total}/>
                    <TotalMoney name="Tổng tiền trong năm" totalMoney={StatisticalYear?.data[0].Total}/>
                </Row>
                <Table dataSource={dataSource} columns={columns} />
            </div>
        </>
    </div>
  )
}

export default DashboardAdmin;
